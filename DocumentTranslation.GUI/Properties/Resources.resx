<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="button_Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="button_Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="button_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="button_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="button_Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="button_Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="button_Translate" xml:space="preserve">
    <value>Translate</value>
  </data>
  <data name="button_TranslateDocuments" xml:space="preserve">
    <value>Translate Documents</value>
  </data>
  <data name="label_AzureRegion" xml:space="preserve">
    <value>Azure Region:</value>
  </data>
  <data name="label_Category" xml:space="preserve">
    <value>Category:</value>
  </data>
  <data name="label_CategoryId" xml:space="preserve">
    <value>Custom Translator Category ID</value>
  </data>
  <data name="label_CategoryName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="label_DocumentsToTranslate" xml:space="preserve">
    <value>Documents to translate</value>
  </data>
  <data name="label_From" xml:space="preserve">
    <value>From:</value>
  </data>
  <data name="label_Glossary" xml:space="preserve">
    <value>Glossary to use (optional):</value>
  </data>
  <data name="label_Input" xml:space="preserve">
    <value>Input:</value>
  </data>
  <data name="label_ResourceName" xml:space="preserve">
    <value>Resource Name:</value>
  </data>
  <data name="label_ShowExperimental" xml:space="preserve">
    <value>Show experimental languages:</value>
  </data>
  <data name="label_StorageConnectionString" xml:space="preserve">
    <value>Storage Connection String:</value>
  </data>
  <data name="label_SubscriptionKey" xml:space="preserve">
    <value>Subscription Key:</value>
  </data>
  <data name="label_TargetFolder" xml:space="preserve">
    <value>Target folder:</value>
  </data>
  <data name="label_To" xml:space="preserve">
    <value>To:</value>
  </data>
  <data name="label_Translation" xml:space="preserve">
    <value>Translation:</value>
  </data>
  <data name="msg_Bytes" xml:space="preserve">
    <value>bytes</value>
  </data>
  <data name="msg_Canceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="msg_Canceling" xml:space="preserve">
    <value>Canceling...</value>
  </data>
  <data name="msg_CategoriesSaved" xml:space="preserve">
    <value>Categories saved</value>
  </data>
  <data name="msg_CharactersCharged" xml:space="preserve">
    <value>Characters Charged: </value>
  </data>
  <data name="msg_Completed" xml:space="preserve">
    <value>Completed: </value>
  </data>
  <data name="msg_DocumentsTranslated" xml:space="preserve">
    <value>document(s) translated</value>
  </data>
  <data name="msg_DocumentsUploaded" xml:space="preserve">
    <value>Documents uploaded.</value>
  </data>
  <data name="msg_Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="msg_Failed" xml:space="preserve">
    <value>Failed: </value>
  </data>
  <data name="msg_InProgress" xml:space="preserve">
    <value>In progress: </value>
  </data>
  <data name="msg_SettingsSaved" xml:space="preserve">
    <value>Settings saved</value>
  </data>
  <data name="msg_TestFailed" xml:space="preserve">
    <value>Test failed</value>
  </data>
  <data name="msg_TestPassed" xml:space="preserve">
    <value>Test passed</value>
  </data>
  <data name="msg_Waiting" xml:space="preserve">
    <value>Waiting: </value>
  </data>
  <data name="tabTitle_Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="tabTitle_Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="tabTitle_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="tabTitle_TranslateDocuments" xml:space="preserve">
    <value>Translate Documents</value>
  </data>
  <data name="tabTitle_TranslateText" xml:space="preserve">
    <value>Translate Text</value>
  </data>
  <data name="text_Categories" xml:space="preserve">
    <value>This list of category names provides easy access to a friendly name for custom translation systems you have built with Custom Translator. More information at http://customtranslator.ai. No need to use this unless you have built a custom translation system. </value>
  </data>
  <data name="text_SettingsInstructions" xml:space="preserve">
    <value>Obtain the subscription key, the Azure region, the resource name and the storage connection string from the Azure portal or from your organization's Azure administrator.</value>
  </data>
  <data name="title_WindowTitle" xml:space="preserve">
    <value>Document Translation</value>
    <comment>App title</comment>
  </data>
  <data name="tooltip_AzureRegion" xml:space="preserve">
    <value>The Azure region your Translator resource resides in. </value>
  </data>
  <data name="tooltip_Category" xml:space="preserve">
    <value>Use the "Settings" tab, "Categories" to define a set of Custom Translator categories you want to use. Leave the selection clear if you are not using Custom Translator.</value>
  </data>
  <data name="tooltip_CategoryClear" xml:space="preserve">
    <value>Clears the selection of a category. Does not remove the category fron your set of available categories.</value>
  </data>
  <data name="tooltip_ResourceName" xml:space="preserve">
    <value>The name of the Translator resource in your Azure subscription.</value>
  </data>
  <data name="tooltip_SaveSettings" xml:space="preserve">
    <value>Save the above settings on your device.</value>
  </data>
  <data name="tooltip_ShowExperimental" xml:space="preserve">
    <value>Whether to show the languages the Translator service considers experimental. Experimental languages may not be available in both directions and the translation can fail. Leave unchecked unless you need to experiment with not fully supported languages.</value>
  </data>
  <data name="tooltip_StorageConnectionString" xml:space="preserve">
    <value>Copy the "Connection String" from the Properties page of the Storage resource in your Azure subscription.</value>
  </data>
  <data name="tooltip_SubscriptionKey" xml:space="preserve">
    <value>Copy the "Key 1" or "Key 2" of the Translator resource in your Azure subscription.</value>
  </data>
  <data name="tooltip_TestSettings" xml:space="preserve">
    <value>Invoke a test of teh above settings. Will show a pass or fail result. </value>
  </data>
</root>